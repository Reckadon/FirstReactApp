{"version":3,"sources":["components/counter.jsx","components/countersHolder.jsx","components/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Counter","this","props","counter","onAdd","onMinus","onDelete","className","id","onClick","getClass","formatCount","value","count","Component","CountersHolder","state","counters","countersNumber","handleDeleteCounter","counterId","filter","setState","countCounters","handleAdd","find","c","handleMinus","handleReset","forEach","onNumberChange","handleAddCounter","length","number","console","log","map","NavBar","App","numberOfNonZeroCounters","handleChangeCounter","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b5f5e7a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  render() {\r\n    const { counter, onAdd, onMinus, onDelete } = this.props;\r\n\r\n    return (\r\n      <div className=\"counter\">\r\n        <span className=\"number\">Counter #{counter.id}</span>\r\n        <button className=\"btnAdd\" onClick={() => onAdd(counter)}>\r\n          +\r\n        </button>\r\n        <span className={this.getClass()}>Count: {this.formatCount()} </span>\r\n        <button className=\"btnAdd\" onClick={() => onMinus(counter)}>\r\n          -\r\n        </button>\r\n        <button className=\"btnDelete\" onClick={() => onDelete(counter.id)}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  getClass() {\r\n    return this.props.counter.value === 0 ? \"zero\" : \"other\";\r\n  }\r\n\r\n  formatCount() {\r\n    const count = this.props.counter.value;\r\n    return count === 0 ? \"Zero\" : count;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass CountersHolder extends Component {\r\n  state = {\r\n    counters: [\r\n      //initial counters\r\n      { id: 1, value: 0 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 },\r\n    ],\r\n    countersNumber: 4,\r\n  };\r\n\r\n  handleDeleteCounter = (counterId) => {\r\n    const counters = this.state.counters.filter(\r\n      (counter) => counter.id !== counterId\r\n    );\r\n    this.setState({ counters: counters });\r\n    this.props.countCounters(this.state.counters, counterId);\r\n  };\r\n\r\n  handleAdd = (counter) => {\r\n    const counters = this.state.counters;\r\n    counters.find((c) => c.id === counter.id).value =\r\n      counters.find((c) => c.id === counter.id).value + 1;\r\n    this.setState({ counters: counters });\r\n    this.countCounters();\r\n  };\r\n  handleMinus = (counter) => {\r\n    const counters = this.state.counters;\r\n    const value = counters.find((c) => c.id === counter.id).value;\r\n    counters.find((c) => c.id === counter.id).value =\r\n      value === 0 ? 0 : value - 1;\r\n    this.setState({ counters: counters });\r\n    this.countCounters();\r\n  };\r\n  handleReset = () => {\r\n    const counters = this.state.counters;\r\n    counters.forEach((counter) => {\r\n      counter.value = 0;\r\n    });\r\n    this.setState({ counters: counters });\r\n    this.props.onNumberChange(0);\r\n  };\r\n  handleAddCounter = () => {\r\n    const counters = this.state.counters;\r\n    counters[counters.length] = { id: this.state.countersNumber + 1, value: 0 };\r\n    this.setState({\r\n      counters: counters,\r\n      countersNumber: this.state.countersNumber + 1,\r\n    });\r\n  };\r\n  countCounters = () => {\r\n    let number = 0;\r\n    this.state.counters.forEach((counter) => {\r\n      if (counter.value >= 1) {\r\n        number++;\r\n      }\r\n    });\r\n    console.log(number);\r\n    this.props.onNumberChange(number);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.counters.map((counter) => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={this.handleDeleteCounter}\r\n            counter={counter}\r\n            onAdd={this.handleAdd}\r\n            onMinus={this.handleMinus}\r\n          />\r\n        ))}\r\n        <button className=\"btnReset\" onClick={this.handleReset}>\r\n          Reset\r\n        </button>\r\n        <button\r\n          className=\"btnReset btnAddCounter\"\r\n          onClick={this.handleAddCounter}\r\n        >\r\n          Add Counter\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountersHolder;\r\n","import React, { Component } from \"react\";\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"NavBar\">\r\n        Number of Non-Zero Counters{\" \"}\r\n        <span className=\"other badge\">{this.props.number}</span>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CountersHolder from \"./components/countersHolder\";\nimport NavBar from \"./components/navbar\";\n\nclass App extends Component {\n  state = {\n    numberOfNonZeroCounters: 0,\n  };\n\n  handleChangeCounter = (number) => {\n    this.setState({ numberOfNonZeroCounters: number });\n  };\n  countCounters = (counters, id) => {\n    let number = 0;\n    counters = counters.filter((c) => c.id !== id);\n    counters.forEach((element) => {\n      if (element.value > 0) number++;\n    });\n    this.setState({ numberOfNonZeroCounters: number });\n  };\n\n  render() {\n    return (\n      <div>\n        <NavBar number={this.state.numberOfNonZeroCounters} />\n        <CountersHolder\n          onNumberChange={this.handleChangeCounter}\n          countCounters={this.countCounters}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./App.css\";\nimport \"./styles.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport CountersHolder from \"./components/countersHolder\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}